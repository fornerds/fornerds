# 제목(Title Message)
# <type>(<scope>) : <subject> (#issueNumber-)
# ex) feat: 로그인 기능 추가 (#123)
################ subject 50 characters ################# -> |

# 한 줄 공백. subject과 body 구분 ★★★★★

# 본문(Body Message) (Optional) 
################ Body 72 characters    ################# -> |

# 꼬리말(Footer) (Optional) 
# <type>: [#issueNumber-] 
# ex) Resolves: #123

#ex1)
#feat: project detail 화면 - overviewTab - contents_box - detail_cards (#11)
#
#what  : css 작업
#where : Project Details 화면 > Overview Tab > contents_box > detail_cards
#
#Related to: #11

#ex2)
#Docs: 문서 수정 (#789)
#
#프로젝트 README 업데이트
#
#Resolves: #789
#Ref: #54

# --- COMMIT END ---
# Title type can be
#  feat      : 새로운 기능 추가 
#  fix       : 버그 수정
#  update    : 원래 정상 동작하나 보완이 필요한 경우   
#  design    : CSS등 사용자 UI 디자인 변경 
#  refactor  : 코드 리팩토링 
#  style     : 코드 포맷팅, 세미콜론 누락, 코드 변경 없이 스타일 관련 기능
#  comment   : 주석 추가 및 수정
#  correct   : 타입 변경, 이름 변경 등에 사용
#  security  : 보안 취약점 해결 및 관련 변경 사항
#  docs      : 문서 수정
#  test      : 테스트 추가, 테스트 리팩토링
#  chore     : 빌드 프로세스 수정 및 환경 설정 파일 변경 (ex .gitignore 수정 등) 
#  rename    : 파일 혹은 폴더명을 수정하거나 옮기는 작업만 하는 경우
#  remove    : 파일을 삭제하는 작업만 수행한 경우
#  revert    : 이전 커밋으로 되돌리는 작업
#  hotfix    : 급하게 치명적인 버그를 고쳐야하는 경우                    
#  prevent   : 특정 기능을 막음                                
#  avoid     : 특정 현상을 회피함                               
#  perf      : 성능 향상 

# -------------------------------------
# Footer type can be
# Related to : 해당 커밋에 관련된 이슈 번호 (아직 해결되지 않은 경우)
# Resolves   : 이슈를 해결했을 때 사용(해당 이슈 닫음) 
# Ref        : 참고할 이슈가 있을 때 사용
# 
# -------------------------------------
# 작성 Tip
#
# [제목]
# - 커밋 제목은 `커밋유형: 제목(이슈넘버)` 형태로 작성합니다.
# - 제목과 본문 사이에 한 줄 띄어  구분합니다. ★★★
# - 제목은 어떤 작업을 했는지 명확하게 드러나야하고, 요약하여 작성합니다.
# - 명령조로 작성하며, 문장보다는 구문으로 작성합니다.
# - 변경사항이 "무엇"인지 명확하게 기술합니다.
# - 커밋 유형의 첫 글자는 대문자로 작성하고, 동사(원형)을 가장 앞에 명령어로 작성합니다.
# - 줄 끝에 마침표를 사용하지 않습니다.
# - 콜론 뒤에는 공백을 한 번 추가하고, 마침표 및 특수 기호를 사용하지 않습니다.
# - 명령조로 작성하고, 50자 이내로 간결하게 표현합니다.
#
# [본문] (선택사항)
# - 본문은 {타입}(적용범위): 메세지 로 표현할 수 없는 상세한 내용을 적는 부분입니다.
# - 72이내로 작성합니다.
# - 본문은 부연 설명이 필요한 경우 작성합니다. 선택사항입니다.
# - 선택사항이기 때문에 간단한 내용의 커밋에는 본문을 작성하지 않아도 됩니다.
# - 필요한 경우에는 최대한 상세히 작성합니다. (코드 변경의 이유를 명확히 작성할수록 좋습니다.)
# - 어떻게 변경했는지보다 무엇을, 왜 변경했는지 작성합니다.
# - 본문에 목록을 나타낼 때는 "-"로 시작합니다.
#
# [꼬리말] (선택사항)
# - 이슈 번호를 참조시킬 때 주로 사용합니다.
# - 선택사항 입니다
# - 유형: #이슈 번호 형식으로 작성합니다.
# - 여러 개의 이슈번호는 쉼표(,)로 구분합니다. 

# 참고 사이트
# https://green-bin.tistory.com/15
# https://hangbok-archive.com/development/management/git-template-%EC%84%A4%EC%A0%95/
